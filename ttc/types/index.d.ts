import { teal, aqua, bisque, blueviolet, brown, cadetblue, chocolate, coral, crimson, gold, goldenrod, darkblue, darkcyan, darkgoldenrod, darkgray, darkgreen, darkolivegreen, darkslategray, darkorange, darkmagenta, darkred, tomato, darkturquoise, turquoise, darkviolet, fuchsia, purple, pink, maroon, steelblue, warning, success, error, info, black, red, blue, white, magenta, yellow, cyan, green, gray, blackBG, blueBG, cyanBG, grayBG, greenBG, magentaBG, redBG, whiteBG, yellowBG, tealBG, aquaBG, bisqueBG, bluevioletBG, brownBG, cadetblueBG, chocolateBG, coralBG, crimsonBG, goldBG, goldenrodBG, darkblueBG, darkcyanBG, darkgoldenrodBG, darkgrayBG, darkgreenBG, darkolivegreenBG, darkslategrayBG, darkorangeBG, darkmagentaBG, darkredBG, tomatoBG, darkturquoiseBG, turquoiseBG, darkvioletBG, fuchsiaBG, purpleBG, pinkBG, maroonBG, steelblueBG, warningBG, successBG, infoBG, errorBG } from './defined-colors';
import { fgColor, bgColor, fgColorRGB, bgColorRGB, fgColorHex, bgColorHex } from './ansi';
import { reset, dim, italic, bold, underline, reverse, hidden, strikethrough, blink } from './basics';
export { teal, aqua, bisque, blueviolet, brown, cadetblue, chocolate, coral, crimson, gold, goldenrod, darkblue, darkcyan, darkgoldenrod, darkgray, darkgreen, darkolivegreen, darkslategray, darkorange, darkmagenta, darkred, tomato, darkturquoise, turquoise, darkviolet, fuchsia, purple, pink, maroon, steelblue, warning, success, error, info, black, red, blue, white, magenta, yellow, cyan, green, gray, blackBG, blueBG, cyanBG, grayBG, greenBG, magentaBG, redBG, whiteBG, yellowBG, tealBG, aquaBG, bisqueBG, bluevioletBG, brownBG, cadetblueBG, chocolateBG, coralBG, crimsonBG, goldBG, goldenrodBG, darkblueBG, darkcyanBG, darkgoldenrodBG, darkgrayBG, darkgreenBG, darkolivegreenBG, darkslategrayBG, darkorangeBG, darkmagentaBG, darkredBG, tomatoBG, darkturquoiseBG, turquoiseBG, darkvioletBG, fuchsiaBG, purpleBG, pinkBG, maroonBG, steelblueBG, warningBG, successBG, infoBG, errorBG, fgColor, bgColor, fgColorRGB, bgColorRGB, fgColorHex, bgColorHex, reset, dim, italic, bold, underline, reverse, hidden, strikethrough, blink, };
declare const ttc: {
    teal: (text: string) => string;
    aqua: (text: string) => string;
    bisque: (text: string) => string;
    blueviolet: (text: string) => string;
    brown: (text: string) => string;
    cadetblue: (text: string) => string;
    chocolate: (text: string) => string;
    coral: (text: string) => string;
    crimson: (text: string) => string;
    gold: (text: string) => string;
    goldenrod: (text: string) => string;
    darkblue: (text: string) => string;
    darkcyan: (text: string) => string;
    darkgoldenrod: (text: string) => string;
    darkgray: (text: string) => string;
    darkgreen: (text: string) => string;
    darkolivegreen: (text: string) => string;
    darkslategray: (text: string) => string;
    darkorange: (text: string) => string;
    darkmagenta: (text: string) => string;
    darkred: (text: string) => string;
    tomato: (text: string) => string;
    darkturquoise: (text: string) => string;
    turquoise: (text: string) => string;
    darkviolet: (text: string) => string;
    fuchsia: (text: string) => string;
    purple: (text: string) => string;
    pink: (text: string) => string;
    maroon: (text: string) => string;
    steelblue: (text: string) => string;
    warning: (text: string) => string;
    success: (text: string) => string;
    error: (text: string) => string;
    info: (text: string) => string;
    black: (text: string) => string;
    red: (text: string) => string;
    blue: (text: string) => string;
    white: (text: string) => string;
    magenta: (text: string) => string;
    yellow: (text: string) => string;
    cyan: (text: string) => string;
    green: (text: string) => string;
    gray: (text: string) => string;
    blackBG: (text: string) => string;
    blueBG: (text: string) => string;
    cyanBG: (text: string) => string;
    grayBG: (text: string) => string;
    greenBG: (text: string) => string;
    magentaBG: (text: string) => string;
    redBG: (text: string) => string;
    whiteBG: (text: string) => string;
    yellowBG: (text: string) => string;
    tealBG: (text: string) => string;
    aquaBG: (text: string) => string;
    bisqueBG: (text: string) => string;
    bluevioletBG: (text: string) => string;
    brownBG: (text: string) => string;
    cadetblueBG: (text: string) => string;
    chocolateBG: (text: string) => string;
    coralBG: (text: string) => string;
    crimsonBG: (text: string) => string;
    goldBG: (text: string) => string;
    goldenrodBG: (text: string) => string;
    darkblueBG: (text: string) => string;
    darkcyanBG: (text: string) => string;
    darkgoldenrodBG: (text: string) => string;
    darkgrayBG: (text: string) => string;
    darkgreenBG: (text: string) => string;
    darkolivegreenBG: (text: string) => string;
    darkslategrayBG: (text: string) => string;
    darkorangeBG: (text: string) => string;
    darkmagentaBG: (text: string) => string;
    darkredBG: (text: string) => string;
    tomatoBG: (text: string) => string;
    darkturquoiseBG: (text: string) => string;
    turquoiseBG: (text: string) => string;
    darkvioletBG: (text: string) => string;
    fuchsiaBG: (text: string) => string;
    purpleBG: (text: string) => string;
    pinkBG: (text: string) => string;
    maroonBG: (text: string) => string;
    steelblueBG: (text: string) => string;
    warningBG: (text: string) => string;
    successBG: (text: string) => string;
    infoBG: (text: string) => string;
    errorBG: (text: string) => string;
    fgColor: (n: number) => string;
    bgColor: (n: number) => string;
    fgColorRGB: (r: number, g: number, b: number) => string;
    bgColorRGB: (r: number, g: number, b: number) => string;
    fgColorHex: (hex: string) => string;
    bgColorHex: (hex: string) => string;
    reset: () => string;
    dim: (text?: string | undefined) => string;
    italic: (text?: string | undefined) => string;
    bold: (text?: string | undefined) => string;
    underline: (text?: string | undefined) => string;
    reverse: (text?: string | undefined) => string;
    hidden: (text?: string | undefined) => string;
    strikethrough: (text?: string | undefined) => string;
    blink: (text?: string | undefined) => string;
};
export default ttc;
//# sourceMappingURL=index.d.ts.map